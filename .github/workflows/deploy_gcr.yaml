name: deploying python app
on:
    # push:
    #     branches:
    #         - main
    workflow_dispatch:
jobs:
    build:
        runs-on:
            - ubuntu-latest
        steps:
            - name: Get the code
              uses: actions/checkout@v3
            - name: Set-up python 3.10
              uses: actions/setup-python@v3
              with:
                python-version: "3.10"
            - name: install dependencies
              run: |
                python -m pip install --upgrade pip
                pip install flake8 pytest
                if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
            - name: Lint with flake8
              run: |
                #stop the build step if there are any python error
                flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
                # exit-zero treats all error as warning
                flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    docker:
        needs: build
        runs-on:
            - ubuntu-latest
        steps:
            - name: checkout
              uses: actions/checkout@v3
            - name: Set up QEMU
              uses: docker/setup-qemu-action@v3
            - name: Set up build docker build
              uses: docker/setup-buildx-action@v3
            - name: Login to GitHub Container Registry
              uses: docker/login-action@v3
              with:
                registry: ghcr.io
                username: ${{ secrets.GH_USERNAME }}
                password: ${{ secrets.GH_TOKEN }}
            - name: Build and Push
              uses: docker/build-push-action@v4
              with:
                context: .
                push: true
                tags: ghcr.io/168412/test_web:app-${{ github.run_number }}

    deploying_helm:
        needs: docker
        runs-on:
            - self-hosted
        steps:
            - name: Checking out to helm repo
              uses: actions/checkout@v3
            - name: Helm Lint
              run: |
                helm lint ./helm_chart
                helm upgrade --install  test ./helm_chart